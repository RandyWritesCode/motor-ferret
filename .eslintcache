[{"/Volumes/Macintosh HD - Data/Users/randydouglas/Desktop/WWW/motor-ferret/src/index.js":"1","/Volumes/Macintosh HD - Data/Users/randydouglas/Desktop/WWW/motor-ferret/src/App.js":"2","/Volumes/Macintosh HD - Data/Users/randydouglas/Desktop/WWW/motor-ferret/src/config.js":"3","/Volumes/Macintosh HD - Data/Users/randydouglas/Desktop/WWW/motor-ferret/src/Services/auth-api-service.js":"4","/Volumes/Macintosh HD - Data/Users/randydouglas/Desktop/WWW/motor-ferret/src/Services/token-services.js":"5","/Volumes/Macintosh HD - Data/Users/randydouglas/Desktop/WWW/motor-ferret/src/Components/Header/Header.js":"6","/Volumes/Macintosh HD - Data/Users/randydouglas/Desktop/WWW/motor-ferret/src/Components/Users/Users.js":"7","/Volumes/Macintosh HD - Data/Users/randydouglas/Desktop/WWW/motor-ferret/src/Components/Nav/Nav.js":"8","/Volumes/Macintosh HD - Data/Users/randydouglas/Desktop/WWW/motor-ferret/src/Components/Login/Login.js":"9","/Volumes/Macintosh HD - Data/Users/randydouglas/Desktop/WWW/motor-ferret/src/Components/Forms/EventForm.js":"10","/Volumes/Macintosh HD - Data/Users/randydouglas/Desktop/WWW/motor-ferret/src/Components/SignUp/SignUp.js":"11","/Volumes/Macintosh HD - Data/Users/randydouglas/Desktop/WWW/motor-ferret/src/Components/Utils/PublicOnlyRoute.js":"12","/Volumes/Macintosh HD - Data/Users/randydouglas/Desktop/WWW/motor-ferret/src/Components/Feed/Feed.js":"13","/Volumes/Macintosh HD - Data/Users/randydouglas/Desktop/WWW/motor-ferret/src/Components/Utils/PrivateRoute.js":"14","/Volumes/Macintosh HD - Data/Users/randydouglas/Desktop/WWW/motor-ferret/src/Components/SearchEvents/SearchEvents.js":"15","/Volumes/Macintosh HD - Data/Users/randydouglas/Desktop/WWW/motor-ferret/src/Components/Footer/Footer.js":"16","/Volumes/Macintosh HD - Data/Users/randydouglas/Desktop/WWW/motor-ferret/src/Components/LandingPage/LandingPage.js":"17","/Volumes/Macintosh HD - Data/Users/randydouglas/Desktop/WWW/motor-ferret/src/Components/SearchEventsForm/SearchEventsForm.js":"18","/Volumes/Macintosh HD - Data/Users/randydouglas/Desktop/WWW/motor-ferret/src/Components/Forms/LocationForm.js":"19","/Volumes/Macintosh HD - Data/Users/randydouglas/Desktop/WWW/motor-ferret/src/Components/Forms/TitleForm.js":"20","/Volumes/Macintosh HD - Data/Users/randydouglas/Desktop/WWW/motor-ferret/src/shared/index.js":"21","/Volumes/Macintosh HD - Data/Users/randydouglas/Desktop/WWW/motor-ferret/src/Components/Hero/Carousel.js":"22","/Volumes/Macintosh HD - Data/Users/randydouglas/Desktop/WWW/motor-ferret/src/Components/Hero/slides.js":"23","/Volumes/Macintosh HD - Data/Users/randydouglas/Desktop/WWW/motor-ferret/src/shared/PageContainer.js":"24","/Volumes/Macintosh HD - Data/Users/randydouglas/Desktop/WWW/motor-ferret/src/shared/ItemContainer.js":"25"},{"size":229,"mtime":1650602620435,"results":"26","hashOfConfig":"27"},{"size":12256,"mtime":1650602620309,"results":"28","hashOfConfig":"27"},{"size":278,"mtime":1650602620434,"results":"29","hashOfConfig":"27"},{"size":1123,"mtime":1650602620432,"results":"30","hashOfConfig":"27"},{"size":1096,"mtime":1650602620433,"results":"31","hashOfConfig":"27"},{"size":551,"mtime":1650602620314,"results":"32","hashOfConfig":"27"},{"size":2633,"mtime":1650602620429,"results":"33","hashOfConfig":"27"},{"size":6617,"mtime":1650602620425,"results":"34","hashOfConfig":"27"},{"size":1127,"mtime":1650602620423,"results":"35","hashOfConfig":"27"},{"size":10981,"mtime":1650602620312,"results":"36","hashOfConfig":"27"},{"size":3290,"mtime":1650602620428,"results":"37","hashOfConfig":"27"},{"size":677,"mtime":1650602620430,"results":"38","hashOfConfig":"27"},{"size":2959,"mtime":1650602620310,"results":"39","hashOfConfig":"27"},{"size":722,"mtime":1650602620430,"results":"40","hashOfConfig":"27"},{"size":1836,"mtime":1650602620427,"results":"41","hashOfConfig":"27"},{"size":337,"mtime":1650602620311,"results":"42","hashOfConfig":"27"},{"size":1239,"mtime":1650602620421,"results":"43","hashOfConfig":"27"},{"size":1630,"mtime":1650602620428,"results":"44","hashOfConfig":"27"},{"size":830,"mtime":1650602620313,"results":"45","hashOfConfig":"27"},{"size":1172,"mtime":1650602620313,"results":"46","hashOfConfig":"27"},{"size":66,"mtime":1650602620437,"results":"47","hashOfConfig":"27"},{"size":3329,"mtime":1650602620315,"results":"48","hashOfConfig":"27"},{"size":276,"mtime":1650602620420,"results":"49","hashOfConfig":"27"},{"size":190,"mtime":1650602620437,"results":"50","hashOfConfig":"27"},{"size":303,"mtime":1650602620436,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"12bdqvv",{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Volumes/Macintosh HD - Data/Users/randydouglas/Desktop/WWW/motor-ferret/src/index.js",[],"/Volumes/Macintosh HD - Data/Users/randydouglas/Desktop/WWW/motor-ferret/src/App.js",[],"/Volumes/Macintosh HD - Data/Users/randydouglas/Desktop/WWW/motor-ferret/src/config.js",[],"/Volumes/Macintosh HD - Data/Users/randydouglas/Desktop/WWW/motor-ferret/src/Services/auth-api-service.js",[],"/Volumes/Macintosh HD - Data/Users/randydouglas/Desktop/WWW/motor-ferret/src/Services/token-services.js",[],"/Volumes/Macintosh HD - Data/Users/randydouglas/Desktop/WWW/motor-ferret/src/Components/Header/Header.js",["108","109","110"],"import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport './Header.css';\n\nfunction Header() {\n    // const location = useLocation();\n\n    // if (location.pathname !== '/') {\n    //     return (\n    //         <header>\n    //             <Link to='/'>\n    //                 <h1>Motor Ferret</h1>\n    //             </Link>\n    //             <h2>The Ultimate Motorsports Event Finder</h2>\n    //         </header>\n    //     );\n    // } else {\n    //     return null;\n    // }\n    return null;\n}\n\nexport default Header;\n","/Volumes/Macintosh HD - Data/Users/randydouglas/Desktop/WWW/motor-ferret/src/Components/Users/Users.js",[],"/Volumes/Macintosh HD - Data/Users/randydouglas/Desktop/WWW/motor-ferret/src/Components/Nav/Nav.js",["111","112"],"import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { styled, alpha } from '@mui/material/styles';\n\nimport {\n    AppBar,\n    Box,\n    Card,\n    CardMedia,\n    IconButton,\n    InputBase,\n    Menu,\n    MenuItem,\n    Toolbar,\n    Typography,\n} from '@mui/material';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport SearchIcon from '@mui/icons-material/Search';\nimport './Nav.css';\n\nconst Search = styled('div')(({ theme }) => ({\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: alpha(theme.palette.common.white, 0.15),\n    '&:hover': {\n        backgroundColor: alpha(theme.palette.common.white, 0.25),\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n        marginLeft: theme.spacing(3),\n        width: 'auto',\n    },\n}));\n\nconst SearchIconWrapper = styled('div')(({ theme }) => ({\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n}));\n\nconst StyledInputBase = styled(InputBase)(({ theme }) => ({\n    color: 'inherit',\n    '& .MuiInputBase-input': {\n        padding: theme.spacing(1, 1, 1, 0),\n        // vertical padding + font size from searchIcon\n        paddingLeft: `calc(1em + ${theme.spacing(4)})`,\n        transition: theme.transitions.create('width'),\n        width: '100%',\n        [theme.breakpoints.up('md')]: {\n            width: '20ch',\n        },\n    },\n}));\n\nconst Nav = () => {\n    const pages = [\n        { title: 'Add Event', link: '/event-form' },\n        { title: 'Search Events', link: '/events-search' },\n        { title: 'Events', link: '/events' },\n        { title: 'View Users', link: '/users' },\n    ];\n\n    // const pages = [\n    //     { title: 'Login', link: '/login' },\n    //     { title: 'SignUp', link: '/sign-up' },\n    // ];\n    const [anchorEl, setAnchorEl] = useState(null);\n    const primaryOpen = Boolean(anchorEl);\n    const handlePrimaryMenuOpen = event => {\n        setAnchorEl(event.currentTarget);\n    };\n    const handlePrimaryMenuClose = () => {\n        setAnchorEl(null);\n    };\n    const menuId = 'primary-menu-button';\n    const renderPrimaryMenu = (\n        <Menu\n            anchorEl={anchorEl}\n            id='primaryButton'\n            keepMounted\n            open={primaryOpen}\n            onClose={handlePrimaryMenuClose}\n            MenuListProps={{\n                'aria-labelledby': menuId,\n            }}\n        >\n            {pages.map((page, idx) => {\n                return (\n                    <MenuItem\n                        component={Link}\n                        to={page.link}\n                        tokey={idx}\n                        onClick={handlePrimaryMenuClose}\n                    >\n                        {page.title}\n                    </MenuItem>\n                );\n            })}\n        </Menu>\n    );\n    return (\n        <Box\n            sx={{ flexGrow: 1, position: 'fixed', zIndex: '1', width: '100%' }}\n        >\n            <AppBar>\n                <Toolbar>\n                    <IconButton\n                        id='primary-menu-button'\n                        aria-controls={\n                            primaryOpen ? 'primaryButton' : undefined\n                        }\n                        aria-haspopup='true'\n                        aria-expanded={primaryOpen ? 'true' : undefined}\n                        onClick={handlePrimaryMenuOpen}\n                    >\n                        <MenuIcon sx={{ color: 'white' }} />\n                    </IconButton>\n\n                    <Typography\n                        variant='h1'\n                        sx={{ fontSize: '1.5rem', paddingLeft: 4 }}\n                    >\n                        <Link to='/' style={{ textDecoration: 'none' }}>\n                            Motor Ferret\n                        </Link>\n                    </Typography>\n                    <Search>\n                        <SearchIconWrapper>\n                            <SearchIcon />\n                        </SearchIconWrapper>\n                        <StyledInputBase\n                            placeholder='Search…'\n                            inputProps={{ 'aria-label': 'search' }}\n                        />\n                    </Search>\n                    {renderPrimaryMenu}\n                </Toolbar>\n            </AppBar>\n        </Box>\n        // <nav>\n        //     <div className=' nav-container'>\n        //         <Link className=' nav-item flex1' to='/'>\n        //             <img\n        //                 src={Logo}\n        //                 alt='motor ferret logo, a ferret driving a red car'\n        //             />\n        //         </Link>\n        //         <div className='nav-item nav-header flex2'>\n        //             <Link to='/'>\n        //                 <h1>Motor Ferret</h1>\n        //             </Link>\n        //             <h2>The Ultimate Motorsports Event Finder</h2>\n        //         </div>\n        //     </div>\n        //     {this.props.loggedIn === true\n        //         ? this.renderLogoutLink()\n        //         : this.renderLoginLink()}\n        // </nav>\n    );\n};\n\nexport default Nav;\n// renderLoginLink() {\n//     return (\n//         <ul className='item'>\n//             <li>\n//                 <Link to='/event-form'>Add Event</Link>\n//             </li>\n//             <li>\n//                 <Link to='/events-search'>Search Events</Link>\n//             </li>\n//             <li>\n//                 <Link to='/events'>Events</Link>\n//             </li>\n//             <li>\n//                 <Link to='/login'>Login</Link>\n//             </li>\n//             <li>\n//                 <Link to='/sign-up'>SignUp</Link>\n//             </li>\n//         </ul>\n//     );\n// }\n\n// renderLogoutLink() {\n//     return (\n//         <ul className='item'>\n//             <li>\n//                 <Link to='/event-form'>Add Event</Link>\n//             </li>\n//             <li>\n//                 <Link to='/events-search'>Search Events</Link>\n//             </li>\n//             <li>\n//                 <Link to='/events'>Events</Link>\n//             </li>\n//             {this.props.admin === 'Yes' ? (\n//                 <li>\n//                     <Link to='users'>View Users</Link>\n//                 </li>\n//             ) : null}\n//             <li>\n//                 <Link to='/' onClick={this.props.handleLogout}>\n//                     Logout\n//                 </Link>\n//             </li>\n//         </ul>\n//     );\n// }\n","/Volumes/Macintosh HD - Data/Users/randydouglas/Desktop/WWW/motor-ferret/src/Components/Login/Login.js",[],"/Volumes/Macintosh HD - Data/Users/randydouglas/Desktop/WWW/motor-ferret/src/Components/Forms/EventForm.js",["113","114"],"import React, { useState } from 'react';\n\nimport {\n    Box,\n    Button,\n    Grid,\n    MenuItem,\n    Paper,\n    TextField,\n    Typography,\n} from '@mui/material';\n\nimport './Form.css';\nimport { PageContainer } from '../../shared/index';\n\nfunction EventForm(props) {\n    const [title, setTitle] = useState('');\n    const [date1, setDate1] = useState('');\n    const [date2, setDate2] = useState('');\n    const [website, setWebsite] = useState('');\n    const [eventType, setEventType] = useState('');\n    const [description, setDescription] = useState('');\n    const [state, setState] = useState('');\n\n    let formattedEventType = eventType.replace('_', ' ').toUpperCase();\n    let days = [\n        'Sunday',\n        'Monday',\n        'Tuesday',\n        'Wednesday',\n        'Thursday',\n        'Friday',\n        'Saturday',\n    ];\n    let months = [\n        'January',\n        'February',\n        'March',\n        'April',\n        'May',\n        'June',\n        'July',\n        'August',\n        'September',\n        'October',\n        'November',\n        'December',\n    ];\n\n    let eventTypes = [\n        { title: 'Rallying', value: 'rallying' },\n        { title: 'Time Attack', value: 'time_attack' },\n        { title: 'Drag Racing', value: 'drag_racing' },\n        { title: 'Road Racing', value: 'road_racing' },\n        { title: 'Other', value: 'other' },\n    ];\n\n    let states = [\n        '',\n        'AK',\n        'AL',\n        'AR',\n        'AS',\n        'AZ',\n        'CA',\n        'CO',\n        'CT',\n        'DC',\n        'DE',\n        'FL',\n        'GA',\n        'GU',\n        'HI',\n        'IA',\n        'ID',\n        'IL',\n        'IN',\n        'KS',\n        'KY',\n        'LA',\n        'MA',\n        'MD',\n        'ME',\n        'MI',\n        'MN',\n        'MO',\n        'MS',\n        'MT',\n        'NC',\n        'ND',\n        'NE',\n        'NH',\n        'NJ',\n        'NM',\n        'NV',\n        'NY',\n        'OH',\n        'OK',\n        'OR',\n        'PA',\n        'PR',\n        'RI',\n        'SC',\n        'SD',\n        'TN',\n        'TX',\n        'UT',\n        'VA',\n        'VI',\n        'VT',\n        'WA',\n        'WI',\n        'WV',\n        'WY',\n    ];\n\n    return (\n        <PageContainer>\n            <Grid className='formItem'>\n                <Typography variant='h3' sx={{ fontSize: '40px' }}>\n                    Add your Event\n                </Typography>\n                <Grid\n                    direction='column'\n                    component='form'\n                    onSubmit={e => props.handleAddEvent(e)}\n                >\n                    <Grid container>\n                        <Grid xs='auto' sx={{ margin: 2 }}>\n                            <TextField\n                                type='text'\n                                label='Title:'\n                                id='title'\n                                value={title}\n                                onChange={e => setTitle(e.target.value)}\n                                required\n                            />\n                        </Grid>\n\n                        <Grid xs='auto' sx={{ margin: 2 }}>\n                            <TextField\n                                label='Start Date: '\n                                InputLabelProps={{ shrink: true }}\n                                type='date'\n                                id='date1'\n                                value={date1}\n                                onChange={e => {\n                                    setDate1(e.target.value);\n                                }}\n                                required\n                            />\n                        </Grid>\n\n                        <Grid xs='auto' sx={{ margin: 2 }}>\n                            <TextField\n                                id='date2'\n                                type='date'\n                                InputLabelProps={{ shrink: true }}\n                                label='End Date: '\n                                value={date2}\n                                onChange={e => {\n                                    setDate2(e.target.value);\n                                }}\n                            />\n                        </Grid>\n\n                        <Grid xs='auto' sx={{ margin: 2 }}>\n                            <TextField\n                                id='organizer'\n                                type='text'\n                                label='Organizer: '\n                                required\n                            />\n                        </Grid>\n                        <Grid xs='auto' sx={{ margin: 2 }}>\n                            <TextField\n                                id='website'\n                                type='text'\n                                label='Website: '\n                                value={website}\n                                onChange={e => setWebsite(e.target.value)}\n                            />\n                        </Grid>\n                        <Grid xs='auto' sx={{ margin: 2 }}>\n                            <TextField\n                                id='event_type'\n                                name='event-type'\n                                label='Event Type:'\n                                select\n                                sx={{\n                                    width: 300,\n                                }}\n                                value={eventType}\n                                onChange={e => setEventType(e.target.value)}\n                            >\n                                {eventTypes.map((eventType, idx) => {\n                                    return (\n                                        <MenuItem\n                                            key={`eventType-${idx}`}\n                                            value={eventType.value}\n                                        >\n                                            {eventType.title}\n                                        </MenuItem>\n                                    );\n                                })}\n                            </TextField>\n                        </Grid>\n\n                        <Grid xs='auto' sx={{ margin: 2 }}>\n                            <TextField\n                                label='Event Description'\n                                name='event_description'\n                                id='event_description'\n                                rows={4}\n                                multiline\n                                value={description}\n                                onChange={e => setDescription(e.target.value)}\n                            />\n                        </Grid>\n                        {/* </Grid>\n\n                    <Grid> */}\n                        <Grid xs='auto' sx={{ margin: 2 }}>\n                            <TextField\n                                label='Street Address:'\n                                type='text'\n                                id='address'\n                                required\n                            />\n                        </Grid>\n\n                        <Grid xs='auto' sx={{ margin: 2 }}>\n                            <TextField\n                                label=' Street Address Line 2:'\n                                type='text'\n                                id='address2'\n                            />\n                        </Grid>\n\n                        <Grid xs='auto' sx={{ margin: 2 }}>\n                            <TextField\n                                label='City'\n                                type='text'\n                                id='city'\n                                required\n                            />\n                        </Grid>\n\n                        <Grid xs='auto' sx={{ margin: 2 }}>\n                            <TextField\n                                select\n                                label='State (or district):'\n                                name='all_states'\n                                id='all_states'\n                                value={state}\n                                onChange={e => setState(e.target.value)}\n                                required\n                            >\n                                {states.map(state => {\n                                    return (\n                                        <MenuItem value={state}>\n                                            {state}\n                                        </MenuItem>\n                                    );\n                                })}\n                            </TextField>\n                        </Grid>\n\n                        <Grid xs='auto' sx={{ margin: 2 }}>\n                            <TextField\n                                label='Zip Code:'\n                                type='text'\n                                id='zip'\n                                required\n                            />\n                        </Grid>\n                    </Grid>\n\n                    <Button className='primary' type='submit'>\n                        Submit\n                    </Button>\n                    <Button type='reset'>Clear</Button>\n                </Grid>\n            </Grid>\n            <Grid className='formItem '>\n                <Typography variant='h3' sx={{ fontSize: '40px' }}>\n                    Event Preview\n                </Typography>\n                <section className='preview'>\n                    <a href={website}>\n                        <h4>{title}</h4>\n                    </a>\n                    <p>\n                        {date1\n                            ? `${days[new Date(date1).getUTCDay()]}, ${\n                                  months[new Date(date1).getUTCMonth()]\n                              } ${new Date(date1).getUTCDate()}, ${new Date(\n                                  date1\n                              ).getUTCFullYear()}`\n                            : ''}\n                    </p>\n                    <p>\n                        {date2\n                            ? `to ${days[new Date(date2).getUTCDay()]}, ${\n                                  months[new Date(date2).getUTCMonth()]\n                              } ${new Date(date2).getUTCDate()}, ${new Date(\n                                  date2\n                              ).getUTCFullYear()}`\n                            : ''}\n                    </p>\n                    <p>{state}</p>\n                    <p>\n                        {formattedEventType === ''\n                            ? ''\n                            : `Event Type: ${formattedEventType}`}\n                    </p>\n                    <p>\n                        {description === ''\n                            ? ''\n                            : `Description: ${description}`}\n                    </p>\n                </section>\n            </Grid>\n        </PageContainer>\n    );\n}\n\nexport default EventForm;\n","/Volumes/Macintosh HD - Data/Users/randydouglas/Desktop/WWW/motor-ferret/src/Components/SignUp/SignUp.js",[],"/Volumes/Macintosh HD - Data/Users/randydouglas/Desktop/WWW/motor-ferret/src/Components/Utils/PublicOnlyRoute.js",[],"/Volumes/Macintosh HD - Data/Users/randydouglas/Desktop/WWW/motor-ferret/src/Components/Feed/Feed.js",["115"],"import React from 'react';\nimport { Card, Grid } from '@mui/material';\nimport { PageContainer, ItemContainer } from '../../shared/index';\n\nfunction Feed(props) {\n    let days = [\n        'Sunday',\n        'Monday',\n        'Tuesday',\n        'Wednesday',\n        'Thursday',\n        'Friday',\n        'Saturday',\n    ];\n\n    let months = [\n        'January',\n        'February',\n        'March',\n        'April',\n        'May',\n        'June',\n        'July',\n        'August',\n        'September',\n        'October',\n        'November',\n        'December',\n    ];\n\n    return (\n        <PageContainer>\n            <section>\n                <h3>Upcoming Events</h3>\n            </section>\n            <Grid container spacing={1}>\n                {props.events\n                    ? props.events.map((event, idx) => {\n                          let formattedEventType = event.event_type\n                              .replace('_', ' ')\n                              .toUpperCase();\n                          let secondDate = event.date2\n                              ? `to ${\n                                    days[new Date(event.date2).getUTCDay()]\n                                }, ${\n                                    months[new Date(event.date2).getUTCMonth()]\n                                } ${new Date(\n                                    event.date2\n                                ).getUTCDate()}, ${new Date(\n                                    event.date2\n                                ).getUTCFullYear()}`\n                              : '';\n\n                          return (\n                              <ItemContainer idx={idx}>\n                                  <a href={event.website}>\n                                      <h4>{event.title}</h4>\n                                  </a>\n                                  <p>\n                                      {days[new Date(event.date1).getUTCDay()]},{' '}\n                                      {\n                                          months[\n                                              new Date(\n                                                  event.date1\n                                              ).getUTCMonth()\n                                          ]\n                                      }{' '}\n                                      {new Date(event.date1).getUTCDate()},{' '}\n                                      {new Date(event.date1).getUTCFullYear()}\n                                  </p>\n                                  <p>{secondDate}</p>\n                                  <p>{event.state}</p>\n                                  <p>Event Type: {formattedEventType}</p>\n                                  <p>Description: {event.event_description}</p>\n                              </ItemContainer>\n                          );\n                      })\n                    : ''}\n            </Grid>\n        </PageContainer>\n    );\n}\n\nexport default Feed;\n","/Volumes/Macintosh HD - Data/Users/randydouglas/Desktop/WWW/motor-ferret/src/Components/Utils/PrivateRoute.js",[],"/Volumes/Macintosh HD - Data/Users/randydouglas/Desktop/WWW/motor-ferret/src/Components/SearchEvents/SearchEvents.js",[],"/Volumes/Macintosh HD - Data/Users/randydouglas/Desktop/WWW/motor-ferret/src/Components/Footer/Footer.js",[],"/Volumes/Macintosh HD - Data/Users/randydouglas/Desktop/WWW/motor-ferret/src/Components/LandingPage/LandingPage.js",["116","117"],"import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button, Card, Grid, Typography } from '@mui/material';\nimport Carousel from '../Hero/Carousel';\n\nfunction LandingPage() {\n    return (\n        <>\n            <Carousel />\n            <Grid container justifyContent='center' sx={{ margin: 2 }}>\n                <Grid item sx={{ margin: 1 }}>\n                    <Button variant='contained' component={Link} to='/events'>\n                        Upcoming Events\n                    </Button>\n                </Grid>\n                <Grid item sx={{ margin: 1 }}>\n                    <Button\n                        variant='outlined'\n                        component={Link}\n                        to='/events-search'\n                    >\n                        Search Event\n                    </Button>\n                </Grid>\n                <Grid item sx={{ margin: 1 }}>\n                    <Button\n                        variant='outlined'\n                        component={Link}\n                        to='/event-form'\n                    >\n                        Create Event\n                    </Button>\n                </Grid>\n            </Grid>\n        </>\n    );\n}\n\nexport default LandingPage;\n","/Volumes/Macintosh HD - Data/Users/randydouglas/Desktop/WWW/motor-ferret/src/Components/SearchEventsForm/SearchEventsForm.js",[],"/Volumes/Macintosh HD - Data/Users/randydouglas/Desktop/WWW/motor-ferret/src/Components/Forms/LocationForm.js",[],"/Volumes/Macintosh HD - Data/Users/randydouglas/Desktop/WWW/motor-ferret/src/Components/Forms/TitleForm.js",[],"/Volumes/Macintosh HD - Data/Users/randydouglas/Desktop/WWW/motor-ferret/src/shared/index.js",[],"/Volumes/Macintosh HD - Data/Users/randydouglas/Desktop/WWW/motor-ferret/src/Components/Hero/Carousel.js",["118","119","120","121","122"],"import React, { useEffect, useRef, useState } from 'react';\nimport {\n    Box,\n    Card,\n    CardContent,\n    CardMedia,\n    Grid,\n    Paper,\n    Slide,\n    Typography,\n    useMediaQuery,\n} from '@mui/material';\nimport { useTheme } from '@mui/material/styles';\nimport { SLIDE_INFO } from './slides';\nimport drift from './assets/drift.mp4';\n\nconst CarouselWrapper = ({\n    children,\n    largeLayout,\n    mediumLayout,\n    smallLayout,\n}) => {\n    const theme = useTheme();\n    const extralargeScreen = useMediaQuery(theme.breakpoints.up('xl'));\n    const largeScreen = useMediaQuery(theme.breakpoints.up('lg'));\n    const mediumScreen = useMediaQuery(theme.breakpoints.up('md'));\n    const smallScreen = useMediaQuery(theme.breakpoints.up('sm'));\n\n    return (\n        <Grid container>\n            <Card\n                sx={{\n                    width: '110%',\n                    overflow: 'hidden',\n                    display: 'block',\n                    maxHeight: extralargeScreen\n                        ? '45vh'\n                        : largeScreen\n                        ? '35vh'\n                        : mediumScreen\n                        ? '28vh'\n                        : smallScreen\n                        ? '22vh'\n                        : '17vh',\n                    pointerEvents: 'none',\n                }}\n            >\n                {children}\n            </Card>\n        </Grid>\n    );\n};\nconst Media = ({ videoEl }) => (\n    <CardMedia\n        component='video'\n        playsInline\n        loop\n        muted\n        controls\n        alt='motorsports event'\n        src={drift}\n        ref={videoEl}\n        sx={{\n            filter: 'brightness(0.6)',\n            position: 'relative',\n        }}\n    />\n);\n\nconst Carousel = () => {\n    const videoEl = useRef(null);\n\n    const attemptPlay = () => {\n        videoEl &&\n            videoEl.current &&\n            videoEl.current.play().catch(error => {\n                console.error('Error attempting to play', error);\n            });\n    };\n\n    useEffect(() => {\n        attemptPlay();\n    }, []);\n\n    return (\n        <CarouselWrapper>\n            <Media videoEl={videoEl} />\n            <CardContent\n                sx={{\n                    position: 'absolute',\n                    top: 70,\n                    left: '1%',\n                    right: '1%',\n                    bgcolor: 'transparent',\n                    color: 'white',\n                }}\n            >\n                <Grid>\n                    <Typography\n                        variant='h1'\n                        align='center'\n                        sx={{\n                            fontSize: '12vw',\n                            transfor: 'translate(0, -50%)',\n                            textTransform: 'capitalize',\n                            // fontFamily: 'Open Sans',\n                        }}\n                    >\n                        Motor Ferret{' '}\n                    </Typography>\n                    <Typography\n                        variant='h2'\n                        align='center'\n                        sx={{ fontSize: '5vw' }}\n                    >\n                        Find your event now\n                    </Typography>\n                </Grid>\n            </CardContent>\n        </CarouselWrapper>\n    );\n};\n\nexport default Carousel;\n","/Volumes/Macintosh HD - Data/Users/randydouglas/Desktop/WWW/motor-ferret/src/Components/Hero/slides.js",[],"/Volumes/Macintosh HD - Data/Users/randydouglas/Desktop/WWW/motor-ferret/src/shared/PageContainer.js",[],"/Volumes/Macintosh HD - Data/Users/randydouglas/Desktop/WWW/motor-ferret/src/shared/ItemContainer.js",[],{"ruleId":"123","severity":1,"message":"124","line":1,"column":8,"nodeType":"125","messageId":"126","endLine":1,"endColumn":13},{"ruleId":"123","severity":1,"message":"127","line":2,"column":10,"nodeType":"125","messageId":"126","endLine":2,"endColumn":14},{"ruleId":"123","severity":1,"message":"128","line":2,"column":16,"nodeType":"125","messageId":"126","endLine":2,"endColumn":27},{"ruleId":"123","severity":1,"message":"129","line":8,"column":5,"nodeType":"125","messageId":"126","endLine":8,"endColumn":9},{"ruleId":"123","severity":1,"message":"130","line":9,"column":5,"nodeType":"125","messageId":"126","endLine":9,"endColumn":14},{"ruleId":"123","severity":1,"message":"131","line":4,"column":5,"nodeType":"125","messageId":"126","endLine":4,"endColumn":8},{"ruleId":"123","severity":1,"message":"132","line":8,"column":5,"nodeType":"125","messageId":"126","endLine":8,"endColumn":10},{"ruleId":"123","severity":1,"message":"129","line":2,"column":10,"nodeType":"125","messageId":"126","endLine":2,"endColumn":14},{"ruleId":"123","severity":1,"message":"129","line":3,"column":18,"nodeType":"125","messageId":"126","endLine":3,"endColumn":22},{"ruleId":"123","severity":1,"message":"133","line":3,"column":30,"nodeType":"125","messageId":"126","endLine":3,"endColumn":40},{"ruleId":"123","severity":1,"message":"134","line":1,"column":36,"nodeType":"125","messageId":"126","endLine":1,"endColumn":44},{"ruleId":"123","severity":1,"message":"131","line":3,"column":5,"nodeType":"125","messageId":"126","endLine":3,"endColumn":8},{"ruleId":"123","severity":1,"message":"132","line":8,"column":5,"nodeType":"125","messageId":"126","endLine":8,"endColumn":10},{"ruleId":"123","severity":1,"message":"135","line":9,"column":5,"nodeType":"125","messageId":"126","endLine":9,"endColumn":10},{"ruleId":"123","severity":1,"message":"136","line":14,"column":10,"nodeType":"125","messageId":"126","endLine":14,"endColumn":20},"no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'useLocation' is defined but never used.","'Card' is defined but never used.","'CardMedia' is defined but never used.","'Box' is defined but never used.","'Paper' is defined but never used.","'Typography' is defined but never used.","'useState' is defined but never used.","'Slide' is defined but never used.","'SLIDE_INFO' is defined but never used."]